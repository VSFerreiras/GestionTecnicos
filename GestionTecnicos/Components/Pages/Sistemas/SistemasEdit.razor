@page "/Sistema/Edit/{SistemaId:int}"
@inject SistemasService SistemasService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar Sistema</PageTitle>

<EditForm Model="Sistema" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center bg-primary text-white m-2">
                <h3 class="card-title">Editar Sistema</h3>
            </div>
            <div class="card-body">
                @* SistemaId *@
                <div class="mb-3">
                    <label class="form-label">SistemaId</label>
                    <InputNumber class="form-control small-input" @bind-Value="Sistema.SistemaId" readonly />
                </div>

                @* Descripción *@
                <div class="mb-3">
                    <label class="form-label">Descripción</label>
                    <InputText class="form-control wide-input" @bind-Value="Sistema.Descripcion" />
                    <ValidationMessage For="@(() => Sistema.Descripcion)" />
                </div>

                @* Complejidad *@
                <div class="mb-3">
                    <label class="form-label">Complejidad</label>
                    <InputNumber class="form-control wide-input" @bind-Value="Sistema.Complejidad" />
                    <ValidationMessage For="@(() => Sistema.Complejidad)" />
                </div>
            </div>

            @* Footer *@
            <div class="card-footer mt-2 text-center">
                <button type="submit" class="btn btn-outline-success">
                    <span class="bi bi-check-circle-fill"></span> Guardar
                </button>
                <a href="/Sistema" class="btn btn-outline-danger">
                    <span class="bi bi-arrow-bar-left"></span> Retroceder
                </a>
            </div>
        </div>
    </div>

    @* Notificaciones *@
    <label class="text-danger" hidden="@string.IsNullOrEmpty(Error)">@Error</label>
</EditForm>

@code {
    [Parameter]
    public int SistemaId { get; set; }
    public Sistemas Sistema { get; set; } = new Sistemas();
    public string Error { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Sistema = await SistemasService.Buscar(SistemaId);
    }

    private async Task Modificar()
    {
        var creado = await SistemasService.Guardar(Sistema);
        if (creado)
        {
            navigationManager.NavigateTo("/Sistema");
        }
        else
        {
            Error = "Error al guardar el Registro";
        }
    }
}