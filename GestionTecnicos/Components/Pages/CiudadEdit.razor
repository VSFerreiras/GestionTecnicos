@page "/Ciudad/Edit/{CiudadId:int}"
@inject CiudadesService CiudadesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar Ciudad</PageTitle>

<EditForm Model="Ciudad" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Editar Ciudad</h5>
            </div>

            <div class="card-body">

                @* CiudadId *@
                <div class="mb-3">
                    <label class="form-label"><strong>CiudadId</strong></label>
                    <InputNumber class="form-control" @bind-Value="Ciudad.CiudadId" readonly />
                </div>

                @* Nombre Ciudad *@
                <div class="mb-3">
                    <label class="form-label"><strong>Nombre Ciudad</strong></label>
                    <InputText class="form-control" @bind-Value="Ciudad.CiudadNombre" />
                    <ValidationMessage For="(() => Ciudad.CiudadNombre)" />
                </div>

            </div>

            @* Footer *@
            <div class="card-footer mt-2 text-center">
                <button type="submit" class="btn btn-primary bi bi-floppy">Guardar</button>
                <a href="/Ciudad" class="btn btn-secondary"><span class="bi bi-arrow-left"></span> Retroceder</a>
            </div>
        </div>
    </div>
    @* Notificaciones *@
    <label style="color:green;" hidden="@string.IsNullOrEmpty(Saved)">@Saved</label>
    <label style="color:red;" hidden="@string.IsNullOrEmpty(Error)">@Error</label>
</EditForm>

@code {
    [Parameter]
    public int CiudadId { get; set; }

    private Ciudades Ciudad { get; set; } = new Ciudades();
    private string Error { get; set; } = string.Empty;
    private string Saved { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Ciudad = await CiudadesService.Buscar(CiudadId);
    }

    private async Task Modificar()
    {
        if (await ExisteCiudad())
        {
            Error = "Ya existe una ciudad con ese nombre";
            return;
        }

        var creado = await CiudadesService.Guardar(Ciudad);
        if (creado)
        {
            Saved = "Ciudad editada exitosamente";
            navigationManager.NavigateTo("/Ciudad");
        }
    }

    public async Task<bool> ExisteCiudad()
    {
        var existe = await CiudadesService.Existe(Ciudad.CiudadId);
        return existe;
    }
}
