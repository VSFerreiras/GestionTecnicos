@page "/Delete/{TecnicoId:int}"
@inject TecnicosService TecnicosService
@rendermode InteractiveServer
@inject NavigationManager navigationManager

@*HTML*@
<PageTitle>Eliminar</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Eliminar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center bg-primary text-white m-2">
                <h4 class="card-title"><strong>Eliminar técnico</strong></h4>
            </div>

            <div class="card-body ">
                <div class="card-header bg-light">
                    <h6 class="text-danger fs-4 ">¿Estás seguro de que quieres eliminar a este técnico?</h6>
                </div>
                <div class="card shadow-lg my-3 col-md-6">
                    <h4 class="bg-light card-header fw-bold text-center">Datos del técnico</h4>
                    <ul class="px-3 pt-4 pb-5 list-unstyled">
                        <li><strong>TecnicoId: </strong>@Tecnico.TecnicoId</li>
                        <li><strong>SueldoHora: </strong>@Tecnico.SueldoHora</li>
                        <li><strong>Nombres: </strong>@Tecnico.Nombres</li>
                    </ul>
                </div>
            </div>
            @*Footer*@
            <div class="card-footer mt-2">
                <button type="submit" class="btn btn-outline-danger bi bi-trash-fill"> Eliminar </button>
                <a href="/" class="btn btn-outline-primary"> <span class="bi bi-box-arrow-left"></span>Volver</a>
            </div>
        </div>
    </div>
    @* Notificaciones *@
    <label style="color:green;" hidden="@string.IsNullOrEmpty(Saved)">@Saved</label>
    <label style="color:red;" hidden="@string.IsNullOrEmpty(Error)">@Error</label>
</EditForm>


@code 
{
    [Parameter] public int TecnicoId { get; set; }

    private string Error { get; set; } = string.Empty;
    private string Saved { get; set; } = string.Empty;
    private Tecnicos Tecnico { get; set; } = new Tecnicos();

    protected override async Task OnInitializedAsync()
    {
        Tecnico = await TecnicosService.Buscar(TecnicoId);
    }

    public void Nuevo()
    {
        this.Tecnico = new Tecnicos();
    }

    public async Task Eliminar()
    {
        Error = string.Empty;
        Saved = string.Empty;

        var (success, message) = await TecnicosService.Eliminar(Tecnico.TecnicoId);
        if (success)
        {
            Saved = message;
            navigationManager.NavigateTo("/");
        }
        else
        {
            Error = message;
        }

        Nuevo();
    }

}
