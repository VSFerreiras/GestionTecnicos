@page "/Create"
@inject TecnicosService TecnicosService
@rendermode InteractiveServer
@inject NavigationManager navigationManager

@*HTML*@
<PageTitle>Crear</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center bg-primary text-white m-2">
                <h3 class="card-title">Registro de Tecnicos</h3>
            </div>

            <div class="card-body">
                @*TecnicoId*@
                <div class="mb-3">
                    <label class="form-label">TecnicoId</label>
                    <InputNumber class="form-control small-input" @bind-Value="Tecnico.TecnicoId" readonly />
                </div>

                @*Nombres*@
                <div class="mb-3">
                    <label class="form-label">Nombres</label>
                    <InputText class="form-control wide-input" @bind-Value="Tecnico.Nombres"/>
                    <ValidationMessage For="@(() => Tecnico.Nombres)"/>
                </div>

                @*SueldoHora*@
                <div class="mb-3">
                    <label class="form-label">Sueldo por hora</label>
                    <InputNumber class="form-control wide-input" @bind-Value="Tecnico.SueldoHora"/>
                    <ValidationMessage For="@(() => Tecnico.SueldoHora)"/>
                </div>
            </div>

            @*Footer*@
            <div class="card-footer text-center mt-2">
                <button type="button" class="btn btn-outline-primary" @onclick="Nuevo">
                    <span class="bi bi-plus"></span> Nuevo
                </button>
                <button type="submit" class="btn btn-outline-success">
                    <span class="bi bi-check-circle-fill"></span> Guardar
                </button>
                <a href="/" class="btn btn-outline-danger">
                    <span class="bi bi-arrow-bar-left"></span> Retroceder
                </a>
            </div>
        </div>
    </div>
    @* Notificaciones *@
    <label style="color:green;" hidden="@string.IsNullOrEmpty(Saved)">@Saved</label>
    <label style="color:red;" hidden="@string.IsNullOrEmpty(Error)">@Error</label>
</EditForm>

@code {
    private string Error { get; set; } = string.Empty;
    private string Saved { get; set; } = string.Empty;
    private Tecnicos Tecnico { get; set; } = new Tecnicos();

    private void Nuevo()
    {
        Tecnico = new Tecnicos();
    }

    private async Task<bool> Validar()
    {
        Error = string.Empty;

        if (await TecnicosService.ExisteNombre(Tecnico.Nombres))
        {
            return false;
        }

        return true;
    }

    private async Task Guardar()
    {
        Error = string.Empty;
        Saved = string.Empty;

        if (!await Validar())
        {
            Error = "No puede haber dos técnicos con el mismo nombre";
            return;
        }

        var guardado = await TecnicosService.Guardar(Tecnico);
        if (guardado)
        {
            navigationManager.NavigateTo("/");
            Saved = "Registro creado exitosamente";
        }
        else
        {
            Error = "Error al guardar el Registro";
        }
    }
}