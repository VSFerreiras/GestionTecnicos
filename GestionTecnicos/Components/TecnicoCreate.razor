@page "/Create"
@inject TecnicosService TecnicosService
@rendermode InteractiveServer
@inject NavigationManager navigationManager

@*HTML*@
<PageTitle>Crear</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Crear Tecnicos</h5>
            </div>

            <div class="card-body ">

                @*TecnicoId*@
                <div class="mb-3">
                    <label class="form-label"><strong>TecnicoId</strong></label>
                    <InputNumber class="form-control" @bind-Value="Tecnico.TecnicoId" readonly></InputNumber>
                </div>

                @*Nombres*@
                <div class="mb-3">
                    <label class="form-label"><strong>Nombres</strong></label>
                    <InputText class="form-control" @bind-Value="Tecnico.Nombres"/>
                    <ValidationMessage For="@(() => Tecnico.Nombres)"/>
                </div>

                @*SueldoHora*@
                <div class="mb-3">
                    <label class="form-label"><strong>SueldoHora</strong></label>
                    <InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora"/>
                    <ValidationMessage For="@(() => Tecnico.SueldoHora)"/>
                </div>
            </div>

            @*Footer*@
            <div class="card-footer text-center mt-2">
                <a href="/" class="btn btn-danger"> <span class="bi bi-arrow-left"></span>Retroceder</a>
                <button type="submit" class="btn btn-primary bi bi-floppy"> Guardar </button>
                <button type="submit" class="btn btn-outline-success" @onclick="Nuevo">Nuevo</button>            
            </div>
        </div>
    </div>
    @* Notificaciones *@
    <label style="color:green;" hidden="@string.IsNullOrEmpty(Saved)">@Saved</label>
    <label style="color:red;" hidden="@string.IsNullOrEmpty(Error)">@Error</label>
</EditForm>



@code {
    private string Error { get; set; } = string.Empty;
    private string Saved { get; set; } = string.Empty;
    private Tecnicos Tecnico {get; set;}= new Tecnicos();

    public void Nuevo(){
        this.Tecnico = new Tecnicos();
    }

    private async Task<bool> Validar()
    {
        Error = string.Empty;

        if (await TecnicosService.ExisteNombre(Tecnico.Nombres))
        {
            return false;
        }
        return true;
    }
     public async Task Guardar(){
        Error = string.Empty;
        Saved = string.Empty;

        if(!await Validar()){
            Error = "No puede haber dos técnicos con el mismo nombre";
            return;
        }
        var guardo = await TecnicosService.Guardar(this.Tecnico);
        if(guardo!=null){
            Saved = "Tecnico Guardado Exitosamente";
        }else{
            Error = "Error al guardar el Registro";
        }

    }
}
