@page "/Cliente"
@inject ClientesService ClientesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@* HTML *@
<PageTitle>Registro de clientes</PageTitle>
<div class="container">
    <div class="card shadow-lg">
        <div class="card-header space-between">
            <h5 class="card-title">Registro de Clientes</h5>
            <a href="/Cliente/Create" class="btn btn-success">
                <span class="bi bi-plus-square mt-3"></span> Crear
            </a>
        </div>

        <div class="card-body">
            @*labels*@
            <div class="row">
                @*Filtrar por*@
                <div class="col-3">
                    <label class="col-form-label"><strong>Filtrar por</strong></label>
                </div>

                @*ValorFiltro*@
                <div class="col-4">
                    <label class="col-form-label"><strong>Busqueda</strong></label>
                </div>
            </div>

            @*Inputs y botones*@
            <div class="row align-items-center">
                @*Filtro*@
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Elija una opción</option>
                        <option value="ClienteId">ClienteId</option>
                        <option value="Nombres">Nombres</option>
                    </InputSelect>
                </div>

                @*Busqueda*@
                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar"/>
                        <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
                    </div>
                </div>
            </div>

            @* Tabla *@
            <table class="table table-hover">
                <thead class="table table-striped text-black">
                <tr>
                    <th>ClienteId</th>
                    <th>Nombres</th>
                    <th>Técnico Encargado</th>
                    <th>Dirección</th>
                    <th>Límite de Credito</th>
                    <th>RNC</th>
                    <th>Editar</th>
                    <th>Eliminar</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var cliente in ListaClientes)
                {
                    <tr>
                        <td>@cliente.ClienteId</td>
                        <td>@cliente.Nombres</td>
                        <td>@cliente.Tecnico.Nombres</td>
                        <td>@cliente.Direccion</td>
                        <td>@cliente.LimiteCredito.ToString("N2")</td>
                        <td>@cliente.Rnc</td>
                        <td class="text-center">
                            <a class="btn btn-outline-primary bi bi-pencil-square" href="/Cliente/Edit/@cliente.ClienteId"></a>
                        </td>
                        <td>
                            <a class="btn btn-outline-danger bi bi-trash" href="/Cliente/Delete/@cliente.ClienteId"></a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public List<Clientes>? ListaClientes { get; set; } = new List<Clientes>();

    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaClientes = await ClientesService.Listar(c => c.ClienteId > 0);
    }

    private async Task Buscar()
    {
        if (Filtro == "ClienteId")
        {
            if (int.TryParse(ValorFiltro, out var clienteId))
            {
                ListaClientes = await ClientesService
                    .Listar(c => c.ClienteId == clienteId);
            }
        }
        else if (ValorFiltro.Trim() != "" && Filtro == "Nombres")
        {
            ListaClientes = await ClientesService
                .Listar(c => c.Nombres.ToLower().Contains(ValorFiltro.ToLower()));
        }

        StateHasChanged();
    }
    
}
